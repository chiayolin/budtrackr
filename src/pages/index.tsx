import { authOptions } from './api/auth/[...nextauth]';
import { getServerSession } from 'next-auth';
import prisma from '../lib/prisma';

import NewBudget from '../components/new-budget';
import Layout from '../components/layout';
import Head from 'next/head';
import NextLink from 'next/link';

import { Box, Card, CardBody, Divider, Flex, Heading, Spacer, Stack, Text, } from '@chakra-ui/react';
import { useSession } from 'next-auth/react';

interface Budget {
  id: string,
  name: string,
  desc?: string,
  budget: number,
  expend: number,
}

interface Props {
  budgets: Budget[]
}

export async function getServerSideProps(context) {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session || !session?.user?.email)
    return {
      props: { budgets: [] },
    };

  const budgets = await prisma.budget.findMany({
    where: {
      user: { email: session.user.email }
    },
  });

  return {
    props: { budgets },
  };
}

export default function Home({ budgets }: Props) {
  const { status } = useSession();

  return (
    <>
      <Head>
        <title>BudTrackr</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        { status === 'authenticated' ? 
        <Flex alignItems='center'>
          <Heading size='lg'>Dashboard</Heading>
          <Spacer />
          <NewBudget />
        </Flex>
        :
        <Text mt='8'>Please sign in to continue</Text>
        }
        <Stack mt='4' spacing='4'>
          {Object.values(budgets).map((budget) => (
            <NextLink href={`/b/${budget.id}`} key={budget.id}>
              <Card variant='outline'>
                <CardBody>
                  <Flex alignItems='center'>
                    <Box>
                      <Heading size='md' mb='1'>{budget.name}</Heading>
                      <Text fontSize='sm' color='grey'>{budget.desc}</Text>
                    </Box>
                    <Spacer />
                    <Box textAlign='center'>
                      <Text
                        as='b'
                        color='blue.600'
                        fontSize='md'
                        fontFamily='monospace'
                      >
                        ${budget.expend}
                      </Text>
                      <Divider />
                      <Text
                        fontSize='md'
                        fontWeight='medium'
                        fontFamily='monospace'
                      >
                        ${budget.budget}
                      </Text>
                    </Box>
                  </Flex>
                </CardBody>
              </Card>
            </NextLink>
          ))}
        </Stack>
      </Layout>
    </>
  );
}

